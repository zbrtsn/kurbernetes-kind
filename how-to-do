
First install docker

for fedora:
  sudo dnf -y install dnf-plugins-core
  sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
  sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  sudo systemctl start docker

making for sure the docker:
$ sudo docker run hello-world

after docker install kubectl:
  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

it's time to install kind:
  # For AMD64 / x86_64
  [ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
  # For ARM64
  [ $(uname -m) = aarch64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-arm64
  chmod +x ./kind
  sudo mv ./kind /usr/local/bin/kind

now you're ready to use kind cluster.



$ kind create cluster

kind'ın default olarak ayarladığı şekilde bir cluster oluşturur.
create-cluster.yaml içerisinden kendinize göre değiştirip oluşturabilirsiniz
(daha fazla worker eklemek veya azaltmak gibi).
Bunun için:

$ kind create cluster --name [cluster'ınızın adı] --config create-cluster.yaml





$ kind get --name ma-cluster kubeconfig > ~/.kube/config

-Özetle, bu komut kind ile oluşturulmuş ma-cluster adlı kümenin kubeconfig dosyasını alır ve bu dosyayı 
-kubectl tarafından kullanılmak üzere yerel makinedeki ~/.kube/config dosyasına kaydeder.
-Bu sayede, kubectl komutlarını kullanarak ma-cluster kümesini yönetebilirsiniz.
-kubectl'i belirli bir cluster'a yönlendiriyoruz. (kubeadm'den kind'a geçiş yaparken kullandım. Kubectl kubeadm dosya yolunda kalmış kind'ı görmüyordu.)



$ kubectl get svc
NAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE
flask-service   NodePort    10.96.41.206   <none>        80:32412/TCP   4h42m
kubernetes      ClusterIP   10.96.0.1      <none>        443/TCP        5h10m



$ kubectl port-forward svc/flask-service 8080:80

-Kubernetes içindeki bir servise yerel makineden erişim sağlamaktır.
-Bu komut, yerel makinede 8080 numaralı portu, Kubernetes kümesi içindeki flask-service adlı servisin 80 numaralı portuna yönlendirir.
-Bu sayede, tarayıcınızda veya başka bir istemci uygulamada http://localhost:8080 adresine giderek,
-Kubernetes içerisindeki flask-service servisine erişebilirsiniz.
